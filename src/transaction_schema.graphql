type Query {
  transactions(query: TransactionQueryInput, limit: Int = 100, sortBy: TransactionSortByInput): [Transaction]!
}

type Transaction {
  amount: Float
  canonical: Boolean
  memo: String
  dateTime: String
  hash: String
  blockHeight: Int
  kind: String
  to: String
  from: String
  none: Int
}

type TransactionQueryInput {
  canonical: Boolean
  memo: String
  dateTime: String
  dateTime_gte: String
  dateTime_lte: String
  hash: String
  blockHeight: Int
  kind: String
  to: String
  from: String
  nonce: Int
  OR: [TransactionQueryInput!]
  AND: [TransactionQueryInput!]
}

enum TransactionSoryByInput {
  NONCE_ASC
  NONCE_DESC
}